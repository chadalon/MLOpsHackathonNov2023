['all_hands.json', 'architecture.json', 'board_meeting.json', 'code_review.json', 'interview.json', 'long_product_conversation.json', 'pay_raise.json', 'product_meeting.json', 'project_introduction.json', 'project_presentation.json', 'sales_pitch.json', 'standup.json']

all_hands.json
C: Good morning, everyone. Uh, thanks for joining this all-hands meeting. We've, you know, been through a lot of discussions at the executive level, and we want to, um, share our way forward with you all.
M: That's right. We've, uh, decided to pivot our strategy to focus more on online exclusivity and, you know, personalized customer experiences. We believe this will, um, set us apart even in these tough times.
O: And, uh, to support this, we're streamlining our product lines to ensure that we're, you know, producing what our customers really want and value.
C: We understand that change can be, like, daunting, but we're confident that this is the, um, best path forward for our brand and for all of us here.
E1: Excuse me, um, if I may. How will these changes, you know, affect our job security?
C: That's a, uh, great question. We're doing everything we can to, you know, avoid layoffs. By shifting our focus, we're actually hoping to, like, create more opportunities within the company.
E2: But, uh, aren't we a luxury brand? How can we maintain our, you know, image if we're offering discounts online?
M: I'm glad you brought that up. We're not just, you know, slashing prices. We're creating exclusive offers that, um, enhance the value of our brand. Think limited editions and, like, members-only collections.
E3: And what about the, uh, supply chain issues? If we're focusing online, won't that, you know, exacerbate the problem?
O: Actually, by streamlining our offerings, we'll be able to, you know, better predict and manage inventory. This should, um, alleviate some of the pressure on our supply chain.
E4: This all sounds, like, well and good, but what's the real impact going to be on our day-to-day?
C: We're rolling out, um, training programs to help everyone adapt to the new tools and processes. We want to, you know, ensure that this transition is as smooth as possible.
E5: Will there be, uh, opportunities for input as we go along? Some of us have, you know, ideas that could help.
M: Absolutely. We want to, like, foster an environment where everyone feels they can contribute. Your ideas and, um, feedback are invaluable.
C: We'll be setting up, you know, channels for ongoing feedback. And we encourage you to, um, speak with your managers if you have immediate thoughts.
E1: It's just, uh, a lot to take in. How will we measure success?
O: We'll be tracking, you know, various metrics closely. Online engagement, sales, customer feedbackâ€”they'll all be, um, key indicators.
C: We'll be transparent with you about, like, our progress. We're in this together, and we'll, you know, succeed together.
E2: Alright, I guess we'll, um, see how it goes.
C: Thank you, everyone, for your, uh, questions and for your commitment. We're excited about this new chapter and, you know, we're glad to have you all on board.

architecture.json
J: Hey Mia, I've been thinking about the API design for our real-time chat feature. I believe using WebSockets would be the best approach. It's fast and provides full-duplex communication.
M: I see where you're coming from, Jake. WebSockets are great for real-time communication. However, I was leaning more towards Server-Sent Events (SSE). They're simpler to implement and might be sufficient for our needs.
J: I've worked with SSE before, and while it's good for one-way communication, it might not be the best fit for a chat application. WebSockets offer bi-directional communication, which seems more apt.
M: I understand your concerns, Jake. But considering our current infrastructure and the team's familiarity, SSE might be easier to roll out. Plus, it's less resource-intensive.
J: That's a valid point, Mia. I appreciate your perspective. I just worry about potential limitations with SSE, especially when we scale. But I'm open to hearing more about why you think it's the right choice.
M: Thanks for being understanding, Jake. My main reasoning is the ease of implementation. With SSE, we can leverage our existing HTTP infrastructure. And while it's true that SSE is primarily for one-way communication, we can use short polling for the reverse channel. It's not perfect, but it might be a good starting point.
J: I see what you mean. But with WebSockets, we wouldn't need that extra layer of polling. It's more streamlined. However, I do recognize the benefits of starting with something simpler and iterating on it.
M: Exactly, Jake. We can start with SSE and, if we face any limitations, consider transitioning to WebSockets. It's about finding a balance between simplicity and functionality. And I genuinely believe that starting with SSE might give us a smoother launch.
J: I respect your approach, Mia. While I still have reservations, I trust your judgment. Let's start with SSE and monitor its performance closely. If we need to pivot, we'll have the data to back our decision.
M: Thank you, Jake. I appreciate your flexibility. Let's collaborate closely on this and ensure we deliver the best experience for our users.

board_meeting.json
C: Alright, let's, uh, get started. As you all know, we're facing a, you know, significant challenge with the market downturn. Our usual buyers are, um, tightening their belts.
F: Yes, it's, uh, concerning. Our sales have dropped by, you know, 20% this quarter alone. We need to, um, look at cost-cutting measures, perhaps.
M: Well, I'd like to, you know, suggest that instead of cutting costs, we, um, double down on marketing. We need to, like, create a desire for our brand even in tough times.
O: I'm not sure that's the, uh, right approach. Our inventory is already high. Increasing marketing spend when, you know, people are spending less seems risky.
C: Let's, um, keep the discussion constructive. We need to, you know, explore all options. What about our online sales?
E: Online sales are, like, steady, but they're not making up for the, you know, loss in in-store purchases. We could, um, explore more aggressive online promotions.
F: But, uh, promotions mean discounts, right? That could, you know, devalue our brand. We've always positioned ourselves as a luxury label.
M: That's true, but we can be, you know, creative about it. Collaborations with influencers, limited-time offers, or, um, exclusive online collections could work.
O: I'm worried about the, uh, supply chain though. We're already dealing with, you know, delays and shortages. Any increase in demand could, like, exacerbate that.
C: Good points, but we can't just, you know, do nothing. We need to, um, balance brand integrity with survival. Maybe we focus on, like, limited runs? Exclusive but, you know, at a slightly lower price point?
F: It's a, um, delicate balance. We need to maintain our margins to, you know, stay afloat. Perhaps we could, like, streamline our product lines?
E: Streamlining could work. And maybe we, you know, enhance the customer experience online? Make it more, um, exclusive and personalized?
M: Personalization is key. We need to, like, connect with our customers on a deeper level. Show them that, you know, we're more than just clothesâ€”we're a lifestyle.
O: Alright, but let's not forget our, uh, employees. Any cost-cutting or, you know, operational changes will affect them too.
C: Absolutely. Whatever we decide, we need to, you know, ensure that our team is on board and, um, motivated. They're the ones who will, like, carry out these strategies.
F: So, it seems we're, you know, leaning towards a mix of streamlining and, um, enhanced marketing? With a focus on online exclusivity and, like, customer experience?
M: Yes, and let's not, you know, rule out selective promotions. They can be a powerful tool if, um, used wisely.
O: Agreed. Let's, uh, draft some proposals on how we can, you know, implement these ideas without compromising our brand or, like, overwhelming our supply chain.
C: Great, let's, um, reconvene next week with those proposals. We need to, you know, act fast but also act smart. Thanks, everyone, for your, uh, input.

code_review.json
SD: Alright, let's go over this Node.js API you've written. First off, why did you use `var` for variable declarations? We've moved past that. You should be using `let` or `const`.
JD: Oh, I thought `var` was still acceptable. I'll make a note to change that.
SD: It's not about what's "acceptable." It's about writing modern, efficient code. And why is there no error handling in this route? What happens if the database call fails?
JD: I was planning to add error handling later. I wanted to get the basic functionality working first.
SD: That's not how we do things here. You need to think about these scenarios from the start. And this callback hell... haven't you heard of Promises or async/await?
JD: I have, but I thought callbacks would be simpler for this small piece of functionality. I can refactor it.
SD: "Simpler"? It makes the code harder to read and maintain. And why are there no comments in your code? How is anyone supposed to understand what's going on?
JD: I felt the code was self-explanatory. But I'll add comments to clarify.
SD: Look, you need to step up your game. This isn't a school project. We have standards.
JD: I understand, and I appreciate the feedback. I'll make the necessary changes.
SD: Make sure you do. And next time, do some research before diving into coding. There are best practices for a reason.
JD: I'll keep that in mind. Thank you for the review.

interview.json
Interviewer: Hey there! Uh, thanks for, you know, coming in today. We've, um, already looked at your technical skills through your portfolio and coding tests and all that. But, uh, today, I'd like to, you know, dive a bit into understanding your soft skills. Does that sound okay?
Candidate: Oh, absolutely. I mean, I've always believed that, you know, soft skills are, well, just as crucial in a development role. So, yeah, I'm totally up for discussing them.
Interviewer: Great, great. So, um, let's start with, uh, teamwork. Can you maybe describe a time when you, uh, had a disagreement with a team member and, you know, how you went about resolving it?
Candidate: Oh, sure. So, at my previous job, there was this one time when a colleague and I, well, we didn't exactly see eye to eye on the architecture for a project. Instead of, you know, letting it become this big issue, we thought, "Why not have a meeting?" We, um, discussed our perspectives, and, uh, then we brainstormed a bit. In the end, we came up with a solution that, well, took a bit from both our ideas. It was, I guess, a win-win, and the project really benefited from our, you know, collaboration.
Interviewer: Ah, that sounds, um, really constructive. So, how do you, you know, handle feedback? Especially when it's, well, not all that positive?
Candidate: Well, I've always seen feedback as, um, a chance to grow, you know? It's not always easy to hear, of course, but I try to, you know, separate my feelings from the feedback and focus on the, um, content. If something's not clear, I'll, you know, ask for more details. The main thing is, I want to learn from it and, well, get better.
Interviewer: Mhm, that's a, uh, good way to look at it. Now, when everything seems, you know, super urgent, how do you, um, prioritize tasks?
Candidate: Oh, that's a good one. I usually start by, you know, listing out all the tasks. Then I, um, categorize them based on, well, their impact and how urgent they are. If there are things that depend on each other, I'll factor those in too. And, um, communication is super important, so I'll often check in with, you know, stakeholders or my team to make sure I'm on the right track.
Interviewer: Got it, got it. And, um, lastly, when you're faced with, you know, a technology or concept you're not familiar with, but it's, like, super important for a project, how do you handle that?
Candidate: Oh, I love those challenges! I mean, I see them as, well, opportunities rather than problems. I'll start by doing some research, maybe take an online course, or, you know, ask colleagues who might know more about it. I really believe in, um, leveraging the collective knowledge of the team. It's, you know, all about learning and growing.
Interviewer: That's a, uh, great mindset to have. Thanks for, you know, sharing all that.

long_product_conversation.json
Seth Hatch: why  it  didn't  show  up  on  that  gage. And  he  thought  I  was  doing  things. And  I'm  like, oh  no. Oh  no. Oh  no. No, it  didn't  break  it. I  deleted  one. like  oh  I'll  just  delete  one  and  then  the  other  one  should  pop  up. Good. Don't  think  women. It's  just  like, see  what  I  mean. You  just  need  to  be  a  quality. I'm  so  sorry. Sorry. I  shouldn't  have  just, I, but  someone  deleted  it. We  were  playing  a  book. Thank  you. Can  you  initiate  it  in  the  bottom  of  the  screen? Yeah. Cheers  man. How's  it  going? Sorry, Wyatt. Is  that  something  that  you're  doing? I'm  very  interested  in  your  work. I'm  very  excited  to  hear  it. Please  give  me  a  score. Hey, first, I'm  going  to  start  talking  about  things. Okay. Thank  you. Thanks  for  having  me. I  have
Dan Ebeling:  one  big  hill  to  climb  before  I  get  on  my  laptop. So  I'm  gonna  start  climbing  that  hill  and  have  you  guys  on  my  headphones  and  then  I'll  be  on  my  laptop  in  the  next  like  10  minutes. That's  my  call.
Seth Hatch: Yeah, I'm  not
Dan Ebeling:  gonna  go  on. Dan?
Seth Hatch: Yeah, what's  up? Sorry, are  you  talking  to  me? Yeah, I  just  have  like...
Dan Ebeling: One  big  hill  to  climb. I'm  my  bike. And  then  I'll  be  on  my  laptop. So  I'm  gonna  just  keep  you  on  my  headphones. For  the  hill. And  then  I'll  be  on  my  laptop. All  right, no  worries,
Seth Hatch: good  luck.
Dan Ebeling: Yeah, if  you  need  me, say  my  name  specifically  and  I  will  stop  and  unmute  myself. Otherwise  you're  just  gonna  hear  heavy  breathing. I'm  just  more, yeah,
Seth Hatch: yeah, yeah, go  ahead. Do  your  thing, do  your  thing. I'll  talk  to  you  in  a  bit.
Dan Ebeling: Did  you  guys  hear  Dan?
Seth Hatch: You  just... He  just  showed  himself. He's  about  to  climb  a  hill. He's  got  the  pit  vipers  on, the  helmet. He's  putting  in  the  work. Like  a  loser, I'm  just  kidding. I  love  you, Dan. You're  wondering  why  I  brought  you  here  today. What  I  want  to  talk  about  is  Connor. Connagra. put  this  up  on  the  board  yesterday. So  he's  interested  in  this  idea  of  a  squad. I  actually  agree. I  think  squad  to  anybody  sounds  really  dumb, except  Gen  Z, maybe  not. I  hear  squad  and  I'm  like. that  I'm  not  I'm  not  buying  that. But  I  do  like  the  idea  of  like  your  group  or  whatever  it  is, right? Like, more  professional  team  is  even  like  I  love  team. Team  is  classic. Um, at  any  rate. He's  interested  in  this  aspect  of. I  hope  you  guys  caught  this  conversation. Dunks  and  threes  to  show  a  developers  like, okay, at  a  glance, right? Like  these  are  how  a  player  is  measured  during  a  season. And  it  can  be  game, it  can  be  season. There's  some  actually  really  cool  stats. I  went  to, I  came  up  here  to  compare. Cause  I'm  not  like  then, or  I  don't  have  the  premium, which  I'm  amazed  that  people  pay  for  like  a  premium  on  this, but  gambling, right? you  get  some  really  cool  stuff. You  sort  of  get  the  average, right? And  then  you  get  these  metrics  about  like  these  high  performers, right, and  how  they're  doing. So Like  there's  a  lot  to  be  done  here. What  I  like  is  how  Dunks  and  Threes  has  made I  would  say  it's  digestible. It's  just  not  quite  digestible  to  me  because  I'm  not  like  a  sports  fan. That's  not  my  hobby. So. But  even  like  for  me, I'm  like, okay, offense, defense. I  actually  don't  know  what  EPM  stands  for. plus  minus. without  a  measure  of. Thanks  for  watching. If  they're  when  they're  on  the  court. over  the  time  here  on  the  court, how  much  they  go  up  or  down, like  the  team  goes  up  or  down  by  20  minutes. And  over  that  20  minutes, your  team  scores  five  more  points  than  the  other  team. You  estimated  plus  or  minus, I  mean, your  plus  minus  for  that  day  would  be  five. And  then  they're  doing  an  estimate, like  a  projection  of  their. So  this  is, yeah, so  this  is  like. why  this  one  is  so  breathy. This  is  such  a  cool  chart  too. like  whoever  this  guy  is. Yeah. star  in  the  league, the  top  players. He's  his  brother. But  he's  on  is  on  the  same  team. Wait, this  this  guy? His  name  is  Giannis. That  guy. They  died  at  the  very  bottom. Their  brothers. And  that  guy's  in  the  days. Okay. Cool. So. With  this  in  mind, what  I  want  to  hopefully  do  with  you  guys  today  is  say Let's  just  start  with  contribution  because  this  here  the  skills I  still  don't  get  what. Actually, I  think  that's  what  Connor's  talking  about  with  Moneyball. putting  together  the  right  team. And  then  the  simulation  is  like  the  actionable  item  of  that. Right? You  find  the  gaps  or  you  find  the  strengths  and  then  you  run  it. So  this  is  simulation. We  don't  know  what  this  looks  like  yet. That's  fine. If  we  could  just  show  these  two  things, I  think  that's  the  value  for  now. In  a  dev  context, it  seems  like  it  hasn't  been  done. Which  is  a  good  idea, I  think  it's  cool. So  let's, what  I  wanna  do  today, cause  this  is  gonna  be. thing. I  want  to  start  talking  about  this. What  does this  look  like  but  for  developers, right? I  mean, we  could  straight  up  like. We  could  just  rip  off  these  categories, but  like  you  see  how  they're  doing  it, right? Like, and  you  can  even  filter  and  like  get  down  to  the  nitty  gritty. Um, but  at  any  rate, I  just  kind  of  want  to  figure  that  out  for  what  this  would  look  like. would  be  how. How  would  you  want  to  narrow  down  the  set  of  people  that  you're. team, like  the  role, there's  experience, kind  of  like  all  the, all  the  ways  that  we  were  splitting  out  the  user  research, like  where  target  market  is. All  the  segmentation, which  that  would  be  role, right? Everything  we  did  segmenting. We  got  experience. like  years  experience, right? That's  it, that's  a  numerical, okay. What  else? That's  not  how  you  do  it. Yeah That  was  it. family. I'm  gonna  need  that. Um. the  whole  experience. I  mean, I  would  I  would  assume  average  time  per  ticket  or  something  like. But  take  it, that's  where  it  can  be, there's  context  around  everything, right? And  you  don't  get  that  with  a  metric  like  that. and  think, Andre, what  would  the  word  be  for? So  with. Roar! Is  that  like. Experience  level  or  is  that  the  function  on  the  team  like  their  lead  their  senior  their  junior? And  then  there's  like  there  are  front  end  engineer, the  back  engineer  there. That's  what  I  assumed  when  I  heard  roll  is  front  end  back  end  full  stack. Those  two  things  are  the  answers. So  there's  Roland  then. We  should  define  that. So  we're  saying  role  here  is. Well, we're  not  saying  it's  anything. What's  the  other  category? like all  the  time. there. Two  types  of  roles  there's  skill  role, like. They've  full  stack  or  they  devops. And  then  there's  their  seniority  seniority  or  like  their  leadership. What  the  organizational. Yeah. Yeah. Wonder  if  now  we  just  say  like  level  no. What's  what's? We  don't  want  to  say  title  either. That  sounds  so  vanilla. Usually  that's  a  combination. of  your. Yeah. Alright.
Dan Ebeling: I  think  one  of  the  challenges  with  these  roles  is  there  is  no... between  organizations. Jacob  is  technically  a  VP, right? Like  a  nerd. and  no  large  company  with  Jacob  be  a  VP. And  yet  he  has  that  role. So  it's  like. I  don't  know  how  meaningful  that  ends  up  being. I  think  the  skill. organizing. I  think
Seth Hatch:  the  skill  role  comes  in. But  leadership  can  be  impactful  in  the  simulation. and. I  think. I  guess  what  I'm  saying  is  that  this
Dan Ebeling:  is  a  big  fire. the  signifier  of  it  is  fairly  arbitrary. Well, we're  talking  in  the  context  of  squad, right?
Seth Hatch: Yeah. So  what  role  you  play  in  that  squad  could  affect  how  you  change, right? Like, even  if  you're  a  VP  or  not, you're  still  in  the  leadership  role  making  decisions  for  us  if  you're  a  junior  or  not, right? So  within  that  squad, and  depending  on  what  the  company  looks  like, what  role  are  you  playing  in  that  squad? Are  you  a  decision  maker  or  are  you  not? Right. Yeah,
Dan Ebeling: if  it's  that  point, then  I  would  probably. pursue  the  racy  chart  route. like  responsible, accountable. uh  uh  consulted  and  informed That's  a  pretty  well  established  framework  that  works  for  that. Interesting.
Seth Hatch: how  would  that  present  itself  as? Something  you  can  get  made  of  them. filter  a  T  by. Yeah, I  think  that's
Dan Ebeling:  generally  associated  with  responsibilities  on  a  squad, right? So  like. Here's  this  responsibility. Someone  this  is  the  person  responsible  for  that. This  is  the  person  who's  informed  about  that I  don't  know  if  it  was  translate, but  that  was  the  first  thing  that  came  to  mind  when if  you're  just  thinking  about  like  roles  on  the  team. members. Okay,
Seth Hatch: that's  a  that's  like  a We  can  work  more  on  that. talk  to  some  more  developers  and  see  if  they  get  their  thoughts. But  I  do  like  that  conversation. Let's  get  some  more. these  categories. Um... Like  some  more, especially  that  are  like  numerical  like  this, right? Oh, yeah, yeah, yeah. So, okay, my  apologies. So  these  would  be  filters. And  then  these. Yeah, I  agree. So  let's  do. We'll  see. Build  stairs. I  won't  say... Cheers. Okay, so  number  of  tickets  pulled  could  be  one, right? Now  is  there  a  way  is  there  another  number  to  show Really? Oh, wait, yeah, your  weekly  average. that  you're  working. Yeah. Yeah. Would  it  be  like  this  one? I  know  it  can  be  dangerous. Conrad  was  like. pissed  when  he  was  like, you  guys  don't, you  saw  that  we  had  10, but  like, it's  because  I'm  mentoring, right? I'm  helping  people. And  he  was  like, and  also  I  took  really  big  one. OK? Like  is  there  a  way  to  give  context  context  around  like  number  of  tickets  pulled  like  average  points  per  ticket, right? Oh, I  love  that. If  it's  not  in  the  color  of  the... Do  you  think  there  is  a  metric  for  room  like? most  devs  are  familiar  with  like  pointing. Yeah, but  there's  really  no, like, universal  baseline. Okay, then  I  won't  worry  about  it. Move. Yeah. Of  course, it  can  be, like, basketball  or... Yeah. Here's  the  rules....if  you  leave......ball  goes  in... Yeah. These  are  literally  the  rules. Yeah, yeah, that's  fair. Software. Yeah, yeah, yeah, yeah. Did  the  bridge? Stay. Um... What  else? And  I  want  to  be  creative. I  want  things  that  like... There  probably  are  some  obvious  ones, but  even  ones  where  it's  like, that's  a  new  way. Right? Like. based  on. repositories  because There's. get  the  big  roadblock  for  us  getting  access  to  like  private  repos. It's  going  to  take, if  a  lot  of  the  value  comes  from  just  looking  at  the  code  repos, able  to  get  inside. repo  access, you  lose  a  lot  of  the  value. Yeah, yeah. Good  morning, is  there  a  lock  of  time? That's  probably  also  gonna  present  us  somewhere. to  install  on  a  company  machine. What  other  methods  are  really  interesting? and  soft  skills  that  we  could  measure. meeting  by  the  order  they  attend  meetings. And  that  meetings  attended  the  other  percentage  of  how  often  they. up  to  meetings  they've  been. invited  to. and And  that's  a. Are  you  scheduled. Yeah, they  only  show  up  to  20%  of  the  instances. schedule  too. without  leaving  a  head  attract  attendance. I  know, I  hate  attract  attendance, but. Good  try. With  the  meeting  bot. With  American, you  can  compare  their  outlook  calendar  to  the  meeting. The  meeting  automatically  shows  up  regardless  of  they  attend  or  not. No, correct. But  the  meeting  will  be  able  to  see  who  the, all  the  attendees  are  for  that  meeting. But  like  you  you're  attending. me  but  would  say  that  you're  not  here. It's  true. I  would  get  deemed  for  that  right  now. So  they  gotta  bring  their  computer. Chris  would  never  bring  his  computer  to  a  meeting, ever. I  don't  know  if  you  guys  knew  that. He  would  never  bring  it. And  I  remember  asking  him, like, why? He  was  like. Why  should  I? Which  was  a  very  crisp  answer, but  I  was  like... I  just  feel  like  it. And  I  was  like, that's  fair. But  also, there's  a  level  of  professionalism  that  comes  with, you're  a  part  of  this  team, right? Be  president, be  a  part  of  the  team. So  it  could  be, I  mean, yeah, that  one  can  be. Yeah, I  do  like  that  though. Well, something  I'm  even  realizing  is  it'd  be  great  to  talk  to example  like. Do  some  more  discovery  around  you, Tom. I  don't  know, like  maybe  Matt  Sanders  or  people  who  are  managing  you  on  trade. Managing  dev  teams  and  being  like, if  you  had  a  team, if  you  had  a  squad, what  would  you  be  looking  at? Like, what  are  you  looking  at  to  be  like, yeah, I'd  hire  this  person, right? And  all  you  had  was  a  spreadsheet. What  would  those  metrics  be? But  there's  16%  allergies  on  there. You  know  what  they  are. Is  that  the  Enneagram  one  or  what? Or  whatever  that  is, the  EIN2. Oh, yeah, the  Minus  Briggs. Yeah, that's  the  Minus  Briggs, yeah. What  the  person  at? Yeah, Um. I  mean, the  one  that's  more  walk  time  is  essentially  like  languages. That  could  also  be  a  filter. But  when  it's  like  a  percent, like  a  percentage, I  don't  know  if  that's. Like  how  would  you  show  that  in  the  graph  where  you're  like  this  individual, this  is  the  tickets  they  pulled, there's  the  time  in  the  code. Like, is  that  like  a. Languages  are  a  chart  of  languages  thing  for  that  person. Languages  is  fantastic. Language  proficiency  is  also. Oh So  there's. Yes, the  ball  or  to. Both, but  I'm  figuring  what  you're  thinking. Are  you  talking  about  like  offshore  devs  speaking  English? Yeah and  what  code  language  is  for  the  fisherman. Now  my  question  is, does  code  language... And  then  language  proficiency  is  one  of  those  a  filter  and  one  of  them  a  metric. Are  both  of  them  filters  or  are  both  of  them  metrics? Yeah, someone  may  spend  some  portion  of  their  time. If  they  see  a  gap  on  the  simulation, sorry. If  I  have  a  job, does  what? be  efficient  in  JavaScript. and  I'm  hoping  that  their  life  majority  of  their  existing  time  is  spent  in  JavaScript. That  would  be  a  metric  I'd  be  interested  in  seeing. Yeah. I  don't  know. like  time  spent  in  JavaScript  over  the  last  30  days. Yes, the. Yeah, I  think  with  that, with  the  in  terms  of  the. On  the  graph. the  throw  if  it  was  like  most  time  spent. In  which  language? Yeah, it's  just  one. There's  just  one  language  that  you're  dominant. What's  your  document  language  in  the  last  three  days? dominant  code  language. Metric? I  think  that  would  be  the  metric. battery. That  is  good  dominant  code  language. Are  there  any  others? I  like  putting  a... I  like  putting  dominant  code  language  on  them, but  also  a  time  box  one. Which  one  have  you  been  spending  time  in? Right, because  if  you  look  at  my  entire  career, I  probably  spend  as  much  time  in  Java  as  I  have  in  JavaScript. But  the  last  six  years  have  been  with  JavaScript  whereas  the  previous  six  years  were  JavaScript. You  know  what  I  mean? I  feel  a  lot  more  confident  in  my  JavaScript  than  Java. That's  great. Thank  you  for  making  me. I  like  the  idea  of  having  some  kind  of  time  box, like  last  30  days, last. You  know, three  months. You  know, like  my  part, my  dominant  languages  JavaScript  for  the  last  three  months. I've  actually  spent  a  lot  of  time  in  Python. actually  I  feel  fairly  confident  in  there  or  whatever. That  is  like  three  months  and  then  it's  just  like, there's  still  a  language  and  then  last  three  months. Yeah. Yeah. I  like  having  some  kind  of  time  box  thingy. Well, I  think  that  comes  with  this. We're  like  you  can  come  down  here, especially  in  the  compare. Jeez, I'm  not  doing  that. Come  in  here  and  compare. There, maybe  do  it  again. See  you. You  can  filter. on  the  last  one  but  you  can  see  this  like  time  over  time  right  like  these  charts Where  was  it? been  in  here. Yeah, I  think  you  can, yeah, you  can  change  the  season. Like  look  at  stuff, you  need  that  historical  data. Which  again  is  nice  because  the  NBA  is  not  going  anywhere  and  they've  been  around  for  a  long  time. So. This  is  the  kind  of  breakfast  we  have. Yeah, if  we  could  get  this  if  we  could  get  this  in  the  hands  of. Valley  tech  groups. How  cool  would  it  be  to  use  this  rather  than  gambling  on  sports? invest  in  new  products. Oh, they've  got  this. They've  got  this  developer  who  was  at  Microsoft. We  could  also  have. I  agree. Yeah. the  filter. No. Probably  late  to  ask  this  question. So  I  think  I  got  you. There's  kind  of  those  two  sides, you  mentioned  at  the  beginning, right? The  skills. Yep. And  you  have. the  contributions. In  my  head, I  kind  of... what  goes  out  is  like, one  is  like  the  way  it's  being  used  as  first  strategic. for  strategic  decision  making  about  who  you  bring  onto  your  team. and  contributions  is. to  help  you  know  is  my  team  operating  well. Like  I've  already  built  my  team. Are  they  doing  well? OK. Which  others? stopping. with  this  particular  screen? Like, are  we  trying  to  build  a  team  or  are  we  trying  to  evaluate  it? Evaluate. This  is  something  that This  is  for  right. Both  for  right, but  this  is  for  right  to  check  at  a  glance. Would  you  say  that  most, a  lot  of  these? If  you're  trying  to  die, then  you're  good. What  would  be  more  interesting? The  reason  I  say  that  is  a  lot  of  these  don't  change  much. The  language  is  interesting, but  from  my  perspective, it's  not  interesting  when  you  already  have  a  team  and  you  know  this. Yeah. Walk-in  time  is  probably  more  interesting  because  you're  looking  at... That's  it. on. And  meetings. Meetings. Yeah, okay. Those  are  much  more  long  term. Like  if  you  were  looking  at  them, it'd  be  like. at  every  moment  or  shit. Yeah. or  before. Is  it  safe  to  say  then  if  right  loves  walk  a  time  and  we're  doing  a  demo, we  make  a  page  where  it's  the  walk  a  time, get  hub, but  Dunks  in  three  style. So, big  slam. Hold  on. that  she  made  a  page  for  it. Okay. And, and, and  then  the  cool  stuff  comes  in. We're  like. Okay, so  right, you're  looking  at  your  team. You  look  at  this  last, I  still  don't  know. There  needs  to  be. into  the  time  bound  aspect  of  it. There's  another. We're  gonna  we're  gonna  highlight  these  main  categories  in  red. There's  another  aspect. That's  like  another  filter  that  is  time And  that's  still  an  unknown  because  it's  like Basketball, you  have  seasons, games. I  don't  know  series. What  is  that? What  is  that  for  a  dev? Is  it  like  Q1, Q2, Q3, Q4? Is  it, right? Is  it  sprints? Is  it? Thank  you. They  just  said. that  you  wanna  see. that  would  be  valuable  as  a  man. That's  probably  gonna  come  from  a  manager, but  like. I  imagine  most  managers  of  a  good  one  probably  is  looking  at  their  team  every  spring. then  what  a  good  manager  do  a  PR  review. Like  if  it's  a  full  manager, they're  going  to  be  doing  fine. like  what  does  that  every  day? I'm  mentoring  someone. They're  going  to  be  here  for  a  few  code. At  least  one  or  two  pairs  a  day. I'm  sorry. And  if  they're  doing  the  job  well, because  they're  gonna  be  making. It's  a  peer  small. Maybe  that's  it. Maybe  that's  it. Thanks. and  try  to  take  some  of  the  time. And  time  stuff's  made  me  think  about  the  visualization. and  how  you  would  take  tickets, pull  time  and  code, like  means  attended, PRs  reviewed. And  what  would  I  want  to  see  over  time? an  individual. I'm  just  seeing  like  blind  charts  now. It's  like, aw. Just  sitting  like. Eww! Or  like, not  stiff. Yeah. most  people  are  just  going  to  be  here. That  was  such  a  fun  like, reee, reee, reee, reee. It  sounded  like  Beastie  Boys. Yeah, because  it. Every  month, month  over  month. this  book. It's  a  good  part  of  my  experience  too. Too  much  arbitrary. Yeah. if  we're  measuring  light. But  what  is  it  we  do? Yeah, I-
Dan Ebeling: the  arbitrary  I  think. The  way  as  I'm  listening  here, what  I  keep  coming  to  is  like. Whatever  metric  we  create  will  essentially. create  an  incentive  to. get  more  of  that  metric, right? Which  is  like  the  thing  that  we  want, you  know? But  it's  like, does  that  mean  that  they're  gonna  like... start  over  estimating  points. tickets  so  that  you  have  higher  points  per  sprint  average. Something  like  that. because  the  incentive  is  to  have  high  points  for  sprint  average. Bow. Uh, yeah, that  like, anyway, there  are  just  some  difficulties  there. One  thing  that  I  keep  coming  back  to  though, is, um, What  if  it  were? more  repetitive. peer  review. Like  in  peer  review, again, like  each  sprint  or  something  like  that, you  in  retrospective  have  like  a  peer  review  point  where  you  write  the  people  that  you  worked  with  that  sprint  on  a  certain  thing, and  then  they  get  this  dynamic  measure. of  like  how  peers  interacted  with  them  on  their  sprint. Um, I  don't  know. That's  just  a. an  idea  drawn  out  there. Yeah,
Seth Hatch: using. Here's  to  try  to  balance. the  implication. That's  right. Because  it's  like, here's  have  the  context  that  we  would  actually.
Dan Ebeling: painstakingly  have  to  give  the  computer. They  all  have  it. You  know, they  know  that  this  person's  ticket  was  really  complicated  and  no  one  else  could  solve  it. But  they  can  also  report  that  that  individual  performed  admirably  in  the  face  of  like  some  really  challenging  stuff. on  paper, like  it  might  not  look  a  lot  like  a  lot  of  points. for  sure.
Seth Hatch: Yeah. question. before  that  thinking  about  like  if  we  were  to  add, you  know, write  like  some  peer. That's  third  bit. It's  an  individual's  rating  based  on  some  peer  evaluation. How? How  do  we  make  sure  that  we're  not  like... Another  360. survey  tool. Mm-hmm. There's  a  lot  of  like, I  do  believe  that  the  people  that  know  best  about  like  how  the  team  is  doing  is, is  the  team. Like, that's  gonna  be  a  great  source  of  information. I  don't  know, maybe  so  it  doesn't  come  off  as... an  hour  and  a  charge  pool, right? Which  is  kind  of  like  the  nerd  prime  problem. Yeah. It's  like, oh, like, seems  we're. Pretty  in  charge  of  the  world. this  is  where  we  want  to  land. Yeah, I  don't
Dan Ebeling:  know. I  mean. It  seems  like  the  chance  is  high  of  becoming  something  like  a  tool  like  that. But  I  think  essentially. I  would  approach  it  as  about  looking  on  the  dimensions  on  like  frequency. like  okay  360  reviews  are  quarterly  right  but  if  you're  doing  this  at  you  know  a  micro  scale  every  week  then  that's  already  you're  going  to  kind  of  get  a  different  resolution  of  data. or  if  you  were  to  do  it  every  two  weeks  or  whatever. But  to  your  point, I  don't  disagree. It  essentially, that  aspect  of  it  would. would  be  a  tool  like  that. And  not  that  we  don't,
Seth Hatch: that  we've  been  talking  about, like  we  want  recruiters  to  use  this  and. I'm  just  trying  to  think  how  we... state. with  the  360, like  with  that. that  micro, like, micro-assess. think  about  how  to  incentivize  people  to. server  bazer  and  far  annoying. Yeah. And  it  might  play. week  is Probably  might. But  if  you're  getting something  out  of  it  where  you  feel  like, oh. Not  only  in  the  game, but  in  the  game. My  early. a  little  money  because... providing  that  feedback  through  the  kind  of  like  an  eon  or  something  else. We're  kind  of  sidetracking  now, but  period  B  value  100%  B. Yeah, I  would  love  to  see  that  as  a  manager. I'd  love  to  see  what  the  peers  think  about. not  productive  there. Right. I  guess
Dan Ebeling:  the  thing  that  like  as  I'm  listening  to  all  these  things  is  like is  like  computers  are  really  good  at  counting  but  they're  not  good  at  making  judgments  you  know  what  I  mean  so  we  can count  the  points  that  the  engineer  has  and  we  can  count  the  lines  of  code  and  we  can  count  the  years  of  experience  and  we  can  count, you  know, whatever  else. worked  in  X  language  or  something  like  that. can't  really. without  strong  context, and  I  think  peers  provide  the  best  context  of  this, make  any  judgments  about  that. Because  again, like  what  if  the  team  is  just  all  overestimating  all  of  their  points? So  it  seems  like  this  team  has  an  extremely  high  velocity  when  in  reality  they  just  overestimate  their  points. We  can't  like  the  computer  can't  make  a  judgment  on  whether  that's  good  or  bad. It  can  just  say. how  many  points  a  team  has  over  time, right? And  then  maybe  the  manager  makes  that  judgment. Yeah, I  think  it's  got  to  be  a  mix. That's  fair.
Seth Hatch: Yeah, I  was  like... The  more  we're  talking  about  this, it's  funny. Because  the  more  we're  talking  about  this, the  more  I'm  like. Dunks  and  threes, fantastic  for  the  walk  of  time  stuff. The  skills  is  what  we've  been  doing  for  perspective 360  view  of. or  personal  platform  peer. But  then  with  those  scores. And... Honestly, like  maybe  that's  it. Like  the  skills  helps  you. see  again  like  where  maybe  some  gaps  are  like  with. and  soft  and  then  the  value  added  is  like  maybe  that  middle  session  section. That's  the  simulation. Like  the  value  is  like  with  your  team, with  their  skills. Like  any  manager  can  look  at  the. contributions  part. are  they  performing  at  a  rate  that  I  care  about? You  could  have  a  computer  tell  you  that  too, but  I  feel  like  a  manager, like  if  I  were  to  be  managing  you  guys, I'd  have  no  idea  what  I'm  looking  at. So  I  don't  really, you  know, like. I  wouldn't  need  that  tool, but  like, Paul, if  you  had  a  team. let's  just  say  nerd  developers  here  and  you  looked  at  that  page, I  think  you  know  exactly  what  you  would  want  to  see. Then  you'd  probably  take  the  piece  more  one-on-ones  and  like. and  text  around  certain  things, but  like  the  value  add. all  of  it  is  just  being  able  to  see  like, how  has  someone  been  doing, like  again, the  lagging  indicators. think  for  a  dev  shop  it'd  be  really  cool  to  be  like  my  friend  has  this  product  or  this  project  that  they  want. worked  on. I  want  to  see  if  my  team  could  handle  it, how  well  we  could  handle  it. So  you  have  these  constraints  where  it's  like, here's  the  requirements. We  need  C  sharp. We  need  it  all. it's  this  type  of  product, like  it's  gonna  take  this  amount  of  time. Here's  my  squad  or  my  team. Give  us  a  score. It's  like  almost  like  TurboTax. Like, how  are  we  gonna  do  on  this  thing? And  then  you  get  a  score  back  where  it's  like, whoa, we  have  some  gaps  here. And  it's  either. take  that  project  or  let's  fill  the  gap  and  let's  take  that  project  because  it  could  be  you  know  I  don't  know  like  I  feel  like  that's  the  value  add  is  understanding  how  the  team  will  perform  or  an  individual  yeah I  would  have  a  hard  time. And  this  is, I  think. you  know, as  a  product  was  really  challenging. As  a, some  of  this  would  be  looking  at  these  screens. I  would  use  them  kind  of  like  what  Dan  was  saying  as  just  information  for  me  to  maybe  dig  deeper  in  an  area  to  get  more  context  for  myself  to  go. Maybe  there's  a  red  flag  here, like. It  may  not  be  anything, but  it  can. help  you  uncover. some  information  where  it  gets. Challenging  and  this  is  I  know  this  where  we're going. is  if  these  metrics  are, if  people  are  incentivized. around  the  metrics, it  makes. Um. I  don't  know  of  any  right  now, where  I'd  be  like... I  won. developers  to  get  paid  based  on. TR  State  Review. But  then  it's  like  based  on  how  many  because. I  mean, my  assumption  before  coming  in  is  that  they  would  game  it. Martin  did  that  and  they  did. And  they  game  it  like  crazy  and  they  weren't  productive. And  that's  what  I  would  expect  them  not  to  produce  work. I'd  expect  them  to  produce  PRs. Yeah. We've  been  the  problem  since  day  one. Yeah. I  don't  know. It's  like, you  get  one  per  day, you  know, like  you  get  like  a  limited  amount  of  that. That's  great. It's  harder  to  go  from  just  being, oh, I  want  to  check  on. my  team  versus  incentivizing  my  team. Yeah. Makes  sense. Yeah. Maybe  that's. Bye. and  I've  topped  it  for  another. I  think  that's  a  fair, it's  been  a  problem  since  day  one, right? It's  been  something  where  it's  like, anything  can  be  weaponized, anything  can  be. Okay. Sorry, what  was  up, Dan? I'm
Dan Ebeling:  agreeing  with  what  Paul  is  saying. I  think  part  of  it  is  like. really  pursue  this  route  of  like  quantified  contribution. at  a  high  level  to  me, it  just  makes  a  developer  like  a  factory  worker. It's  like, you  know, like  how  many  toothpaste  caps  did  you  screw  on  today? Great, that's  more  toothpaste  caps  than  yesterday. You  know, good  job. But  like. I  think  one  of  the  reasons  that  like, you  know, that  we  have  sprints, for  example, and  work  in  cycles  and  all  of  these  things  is  so  that  we  can. continually  change  the  measure  of  success  for  developers  as  time  moves  on, right? And  so. I  feel  like  it's  really, really  difficult  to  measure. any  meaningful  contribution  over  time  because  the  role... over  time. Did  you  get
Seth Hatch:  a  chance  to  talk  to  Connor  today? I
Dan Ebeling:  did. Yeah.
Seth Hatch: Is  what  we're  talking  about  now  pretty  in  line  with  what  he  has  in  mind  for  this  demo? Yes.
Dan Ebeling: I  think. Yeah. His  big  thing  is  like... skills. secondary  to. like  contribution  things  that  we  are  working  on  right  now. So  it's  like  how  can  you  know  like. Hours  work. You  know, tickets, all  requests  made  like  all  that. That  seems, from  my  perspective, that  seemed  like  more  of  the  direction  that  he. he  wanted. Kind  of  like  to  what  Wright  was  talking  about, the  idea  of  like. Um... Yeah, I  have  this  dev  shop  and  I  need  to  manage  them  somehow  and  I  need  to  understand  what  they're  doing. I  need  to  essentially  put  my, my  finger. pulse. what's  the  pulse? Um. stuff. But  one  of  the  challenges  for  me  in  that  is  like, doesn't  like  GitHub  and  JIRA  like  already  have  metrics  for  those  pulses? Like, isn't  that  what  a  burn  down  chart's  meant  for? You  know, like  isn't  that. why  we  have  like  the  languages  in  GitHub  already  and  things  like  that. Yeah, they're.
Seth Hatch: They're  definitely, yeah, they  definitely  are  there. Like  for  repositories. God  is... if  the  word  does. as  as  ours  as  right  would  like  you  know  like  well Yeah. DIVA  will  measure  lines  of  code  committed, removed. Yarrrs. back  in  it. It's  not  gonna  tell  you. Yes, code  open. what  files  you  might  find  and  how  long  your  browser  was  open. of  those, you  know, tasty  Big  Brother  nuggets. I  write  wants  what  he  wants. Um, I  know  what  I  know. He  says. Yeah, his  line  is... If  you  can  measure  what  someone's  doing  well. that  you  can  reward  them  better. That's  his  pictures. This  is  great  for. The  depth  shops  because  they're  gonna  have  better  pull  something  doing  and  it's  great  for  the  developers. I  think  developers  gonna  love  it  because  they  get  paid  more  for  contributing. They're  gonna  get  maybe  they  were  paid, you  know. 100  grand, but  now  you  get  paid  200  grand  because. takes  into  consideration  their  contribution  that  way. And  they  won't  they  won't  care  and  have. Something  monitoring  them  because  it's  like, well, because  they're  getting  paid  a  lot  more. This  is  actually  enabled  it  is  like. really  well. That's  the.. That's  his  pitch. That's  the  pitch. Abonneer! Okay. Well, we  have  10  minutes  left. Think  Dan. You  still  there  by  the  way? Yeah, I  know  what  you're  saying. He  didn't  have  the  greatest  service. Yes, I  am  there. Sorry. I'm  like, in  and  out  of  Internet.
Dan Ebeling: Yeah, you're  fine, man.
Seth Hatch: Here's  what  I'm  thinking, as  a  game  plan, Dan  and  I  will  start  working  on  some  design. Are  you  working  tomorrow, Dan, or  are  you  on  the  road? I've  got  a
Dan Ebeling:  couple  hours  of  work  tomorrow. Yeah, so  I  can  start. I  will  be  working  on  it  so  far, I  guess. I  was  just  gonna  say
Seth Hatch:  what  Dan  and  I  can  do  is  we  can  start  laying  the  foundation  for  What  does  the  walk  of  time  dunks  and  threes  hybrid  baby  look  like  for  us  and  that's  one  page  Next  week  and  we  can  get  that  going  and  tomorrow  dan  if  you  want  to  start  on  those  designs  i'll give  some  more  definition right  for  like  what  we  need  to  put  there, like  some  of  those  metrics  and  things  and  like  what  the  layout  could  look  like. And  I'll  leave, and  I'll  leave  a  link  in  the  chat. leave  a  lot  of  that  to  you  just  because  you  get  it, you've  seen  it. I  also  want  to  get  a  head  start  on  the  view  for... uh  skills. and  what  that  looks  like  because  I  really  do  think  skills  is  what  we're  currently  doing. Skills  is  just  perspective. The  three  P's. That's  still  that  part. I  think  the  value  is  the  simulation. Using  like  an  AI  feature  or  something. To  test  the  gaps  to  test  the  strength  to  test. that  we  like  all  of  these  things  within  a  team. we  can  see  if  that  is  valuable. is  saying  like  that's  that's  valuable  and  I'm  like  I'll  trust  that  you  have  some  data  from  people  you're  selling  to. So  we  can  start  looking  at  what  that  looks  like. So  the  Dunsons, Reeves, Lockett-Tine. kind  of  calendar, those  three  I  think  are  where  you... Those  are  the  three  data  sources. the  data  sources  would  invent  as  many  metrics. Yeah. Yeah. Yeah. Yeah. Could  someone  get  me  a  list? Even  if  it's  just  like, these  are  all  the  things, walk-time  tracks, these  are  all  the  things  that  GitHub  tracks. And  then  obviously, a  calendar  is  a  calendar, right? Meeting  attendance. Or. Perfect. You  good, Dan? Yeah,
Dan Ebeling: I'm  good. I'm  sorry  about  in  and  out  here. those  requirements. Yeah, I  think. to  the  point. We're  still, it's  still  kind  of  like  doing. things  okay  instead  of  doing  one  thing  well. Nah, I... I  want  to  do  some  more  thinking  on  that. So  I'll  look  forward  to  those  requirements  you're  getting  and  talking  more  about  that  sounds  good  to  me. I  think.
Seth Hatch: I  think  Dan, what  is  realistic  is  we  can't  have  a  hi-fi  of skills  and the  Dunxton  3s  page  is  super  easy. That's  not  dynamic  really. There  might  be  a  couple  of  things  on  there  that  are  like  with  the  filtering, but  I  don't  think  we  need  to  go  in  depth  on  that  one. It's  literally  just  going Here's  how  you  measure  a  dev. This  is  how  you  weaponize  information  about  a  dev. skills  is  what  we've  been  working  on, which  Jacob's  been  prototyping, right? So. We  can  talk  more  about  it  tomorrow. Yeah, that  makes  sense. OK. Alrighty. Thanks  guys. Thank  you  again, Dalf. Thank  you. See  you  all.

pay_raise.json
M: Hey Alex, what's up? You seemed pretty eager to chat.
D: Thanks for seeing me, Sarah. I wanted to discuss my current compensation. Given my contributions over the past year, I believe a pay raise would be appropriate.
M: This again? Everyone seems to want more money these days. What's your reasoning?
D: Well, I've taken on a lot more responsibilities, including leading the frontend team for our main product. I've also introduced technologies that have sped up our development process significantly. Plus, I've been mentoring the newer developers.
M: Yeah, yeah, I've heard it all before. Everyone thinks they're doing more than they actually are. But times are tough, you know?
D: I do understand the company's position, Sarah. But I've looked into industry standards, and my current salary is below average for my role and experience. I believe a raise would be fair and align my compensation with the market.
M: Everyone's a researcher now, huh? Let me see this "data" you're talking about.
D: Here's a breakdown of average salaries for senior developers in our area. There's a clear gap between my current salary and the industry average.
M: Looks like a bunch of numbers to me. Look, I'll think about it, but no promises. Money doesn't grow on trees, you know.
D: I'm just asking for fair compensation based on my contributions and the market rate, Sarah.
M: Alright, alright. I'll chat with HR or something. But don't get your hopes up. We'll see.
D: Thank you for considering it, Sarah.
M: Yeah, yeah. We'll talk or whatever.

product_meeting.json
ProductOwner: Alright team, I've been brainstorming some new features for our platform, and I think they're going to be game-changers. I'd like to get your thoughts.
EagerDeveloper: Sounds exciting! What do you have in mind?
ProductOwner: Great enthusiasm! So, first, I'm thinking of integrating a virtual assistant into our platform. It'll guide users through the entire process, making it more interactive.
CynicalDeveloper: Another virtual assistant? Aren't there enough of those already?
ProductOwner: Well, ours will be different. It'll be more intuitive and tailored to our user base. Plus, I believe it aligns with our brand's vision.
EagerDeveloper: I can see the potential. It could enhance user engagement. Do you have any specifics on how it'll function?
ProductOwner: I'm glad you asked. It'll be voice-activated, and users can ask it any questions related to our platform. It'll be like having a 24/7 support team.
CynicalDeveloper: Voice-activated? That sounds like a lot of development work for something that might not even be used that much.
ProductOwner: I understand your concerns, but I genuinely believe this will set us apart from our competitors. It's about staying ahead of the curve.
ProjectManager: We should consider the current project timelines and resources before diving into something new.
ProductOwner: I appreciate that, but I think this is worth the investment. We can shuffle things around if needed.
CynicalDeveloper: So, basically, you've made up your mind, and this meeting was just a formality?
ProductOwner: No, not at all. I value everyone's feedback. But as the product owner, I have to make decisions that I believe are in the best interest of the product.
EagerDeveloper: I think it's worth exploring. But we should also consider other features that might be easier to implement and equally impactful.
ProductOwner: I'll take that into consideration. But for now, let's focus on the virtual assistant. I'll send out more details soon. Thanks for the feedback, everyone.

project_introduction.json
PM: Hey everyone, uh, thanks for hopping on this call at, you know, such short notice. We've got, um, something pretty exciting on the horizon, and I wanted to get you all briefed as soon as possible.
Jordan: No problem! Always up for, like, new stuff. Whatâ€™s the, uh, big news?
PM: So, we've just, um, secured a new project. It's a, you know, a big one. We're going to be building a, uh, mobile app for a retail chain to, like, enhance their online shopping experience.
Casey: Oh, cool. Sounds, like, interesting. What sort of, um, features are they looking for?
PM: They're really focusing on, you know, user experience. So, we're talking about personalized shopping, uh, recommendations, AR for product previews, and, um, seamless checkout. It's quite cutting-edge.
Alex: Wow, AR is definitely, like, trendy right now. But, uh, it's also pretty complex. Whatâ€™s our, you know, timeline looking like?
PM: Yeah, I won't lie, it's tight. We've got about, um, four months to get a minimum viable product out. But, you know, I'm confident we've got the, uh, talent to do it.
Sam: Four months is, like, really soon. Uh, do we have enough hands on deck for this?
PM: Good question, Sam. We're, um, bringing on a couple of contractors to help out. Plus, we'll be, you know, using some agile methodologies to stay lean and, uh, move quickly.
Jordan: Agile's good. Keeps us on our toes. What about, like, the tech stack?
PM: We're thinking, you know, React Native for the app. It'll give us the, uh, flexibility to target both iOS and Android without, like, doubling the workload.
Casey: Makes sense. And, um, for the backend?
PM: We're going with Node.js. It should, you know, work well with the real-time data we need for the personalized features.
Alex: Got it. And, uh, what about the AR part? Thatâ€™s not really our, you know, forte.
PM: Yeah, that's the, um, challenging bit. We're partnering with an AR specialist for that. They'll, like, handle the heavy lifting on the AR module.
Sam: Okay, sounds like we've got, uh, most bases covered. What's our first step?
PM: First thing, we're doing a, you know, a deep dive into the client's current system next week. We need to understand their inventory and, uh, user data structure to integrate it with the app.
Jordan: Integration, huh? That can be, like, tricky. Hope their system is, you know, up to date.
PM: Yeah, I hear you. But, um, they assured us it's all modern tech. We'll, you know, see for ourselves soon enough.
Casey: And, um, what about the design? Are we, like, creating the UI/UX from scratch?
PM: Yep, that's all us. We've got full creative, uh, control. They want something fresh, so, you know, let's get those creative juices flowing.
Alex: Nice, thatâ€™s the part I, like, really enjoy. Count me in for some of those brainstorming sessions!
Sam: Before we, you know, get too deep into planning, can we talk budget and resources?
PM: Absolutely, that's, uh, on the agenda for our next meeting. I'll have the full budget breakdown and, you know, resource allocation ready by then.
Jordan: Perfect. I'm, like, really looking forward to getting started on this.
PM: Great! I'll send out invites for the, um, deep dive session. Let's, you know, hit the ground running and make this app something we're all proud of. Thanks, team!

project_presentation.json
PM: Uh, good afternoon everyone, and, um, thanks for joining us today. We, uh, appreciate the chance to, you know, update you on the project's progress.
S1: Yes, we're eager to see how things have, um, progressed. The last checkpoint was a bit, well, underwhelming.
PM: Right, I understand. So, uh, we've made some strides in development, though we've, um, encountered a few hiccups along the way. The core features are, you know, in place, but some of the, uh, additional functionalities are still, well, in the works.
DL: Yeah, to, um, add to that, the integration of the new payment system has been, you know, more complex than we, uh, initially anticipated. But, uh, we're on it.
S2: I see. We were, um, hoping to hear that we were on track for the, you know, upcoming launch. This is, well, concerning.
PM: Absolutely, we, uh, share your concerns. We're implementing, you know, some mitigation strategies to, um, accelerate the development. We've also, uh, increased our testing to ensure quality isn't, you know, compromised.
S1: Hmm, I must say, we're not just, um, concerned, but rather disappointed. The board was expecting, you know, a beta version ready for testing by now.
DL: Understandable, and, um, we apologize for the, you know, delays. The team is, like, putting in extra hours, and we're, uh, confident we'll catch up.
S2: It's not just about, you know, working extra hours. It's about meeting, well, expectations. We've invested a significant amount, and the returns are, um, not yet visible.
PM: Of course, we, uh, take full responsibility for the, you know, delays. We're exploring, like, every avenue to ensure we meet the project milestones, uh, moving forward.
S1: What specific, um, steps are you taking to address these delays? We need, you know, concrete plans, not just assurances.
DL: Right, so, we've, uh, brought on some additional contractors who are experts in, you know, the areas where we've hit snags. And, um, we're re-evaluating our project timeline to, you know, set more realistic deadlines.
S2: We'll need to see a, um, revised project plan then. And, uh, we expect more frequent updates. This project is critical, and, well, we can't afford any more surprises.
PM: Understood. We'll, uh, provide a detailed project plan by, you know, end of the week and schedule, um, weekly update meetings to keep you informed.
S1: That's a start. Remember, the success of this project is, um, crucial for our year-end financials. We're counting on, you know, your team to deliver.
DL: We, uh, appreciate your patience and, um, trust. We're committed to, you know, making this right and delivering a product that meets, well, everyone's expectations.
S2: Let's hope so. We'll be, um, awaiting your updated plan. Please ensure it's, you know, comprehensive and addresses all our concerns.
PM: Will do. We're on it, and, uh, thank you for your, you know, feedback. It's invaluable as we, um, move forward.
S1: Alright. Let's, um, conclude for today. We'll be expecting that plan, and, uh, let's ensure this meeting next week shows, you know, substantial progress.
PM: Absolutely. Thank you, everyone, for your time, and, uh, we'll be in touch soon.

sales_pitch.json
SP: Hey there, um, thanks for taking the time to meet with me today. I've got something, you know, really exciting to share with you.
C: Sure, I'm all ears. We're always looking for, uh, ways to boost our team's productivity. So, what's this, you know, exciting thing you've got?
SP: So, you know how it's, like, challenging to measure the real impact of each developer's work, right? Well, we've developed this, um, innovative software tool that not only tracks contributions but also, you know, rewards developers in a tangible way.
C: Interesting. We've tried, um, a few things, but nothing really stuck. How does your, you know, product actually work?
SP: Great question! So, our tool integrates directly with your version control system, and it uses, like, advanced analytics to measure each developer's contributions. We're talking code quality, feature development, bug fixes, and, um, even peer reviews.
C: Huh, that sounds, like, pretty comprehensive. But, uh, how do you ensure it's, you know, fair and not just about who codes the most?
SP: Ah, that's the, um, beauty of it. Our algorithm doesn't just count lines of code. It, you know, evaluates the complexity, the innovation, and the, uh, overall value of the contribution. It's all about, like, meaningful impact.
C: Okay, got it. And the rewards part, how does, um, that work?
SP: So, based on the metrics, developers earn points, right? These points can be, you know, redeemed for various rewards. Think bonuses, extra vacation days, tech gadgets, or, um, even charity donations in their name.
C: Oh, that's, like, really cool. But, uh, what about team morale? Won't this, you know, create unnecessary competition?
SP: Actually, it's designed to, you know, foster healthy competition. There's a, um, leaderboard, but it also encourages collaboration. Developers can earn points for helping others, sharing knowledge, and, like, contributing to team success.
C: I see. That could, um, work. How do you handle, you know, onboarding?
SP: It's super easy. We'll, uh, handle the setup and provide training for your team. Plus, we offer, you know, 24/7 support in case you, um, run into any issues.
C: Sounds promising, but, uh, what about the cost? You know, budgets are tight.
SP: We've got a, like, flexible pricing model based on team size and, um, usage. Plus, we're confident that the increase in, you know, productivity and morale will more than, you know, offset the investment.
C: Hmm, I'd have to, you know, see some numbers on that. Can you, um, provide a demo or a trial period?
SP: Absolutely! We can set you up with a, like, free 30-day trial, and I'll walk you through the, you know, analytics so you can see the value firsthand.
C: Alright, that sounds fair. Let's, um, set up that trial then. If it does what you say, you know, we might just have a deal.
SP: Fantastic! I'll, uh, get everything arranged. I'm really excited for you to, you know, see what our tool can do. Thanks for the opportunity!
C: No problem. Looking forward to, you know, seeing it in action. Thanks for coming in.
SP: My pleasure. I'll be in touch soon with the, um, details. Have a great day!

standup.json
ScrumMaster: Good morning, everyone. Let's keep this standup quick and focused. We'll go around and share updates on what you did yesterday, what you're planning for today, and any blockers. Let's start with you, Alex.
Alex: Morning! Yesterday, I finished the integration tests for the new payment module. Today, I'll start working on the API documentation. No blockers.
ScrumMaster: Great progress, Alex. How about you, Priya?
Priya: Hi! I wrapped up the frontend design adjustments from the last feedback session. For today, I'm scheduled to pair with Ben on the user authentication issue. No blockers, but we might need some extra time for testing.
ScrumMaster: Sounds good. Make sure to update the testing timeline if needed. Ben?
Ben: Hey. Yesterday, I was debugging the authentication issue Priya mentioned. We're close to a fix. Today, after pairing with Priya, I'll update the security protocols as per the new requirements. My only blocker is access to the latest encryption library, which I've already emailed IT about.
ScrumMaster: Alright, I'll follow up with IT to expedite that. Thanks, Ben. Let's go to you, Sandra.
Sandra: Good morning. I spent yesterday refactoring some of the legacy code in our main app, which is ongoing. Today, I'll continue with that and also attend the architecture review meeting. No blockers for now.
ScrumMaster: Thanks, Sandra. Keep us posted if anything comes up. Lastly, Tom?
Tom: Morning, team. I completed the database migration script yesterday. Today's plan is to run it on the staging environment to ensure everything works smoothly. My blocker is the staging environment is not yet ready; the ops team is still setting it up.
ScrumMaster: Got it, Tom. I'll check in with ops to see if we can speed that up. Okay, team, let's stay on top of our communication, especially with any dependencies on other teams. Keep the momentum going, and reach out if you hit any snags. That's a wrap for today's standup. Thanks, everyone!